name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  services:
    db:
      image: postgres:13-alpine
      environment:
        - POSTGRES_DB=${secrets.POSTGRES_DB_NAME}
        - POSTGRES_USER=${secrets.POSTGRES_DB_USER}
        - POSTGRES_PASSWORD=${secrets.POSTGRES_DB_HOST}
      volumes:
        - ./.docker/db/data/:/var/lib/postgresql/data/
      ports:
        - "5433:5432"
      expose:
        - 5432
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_DB_USER} -d ${POSTGRES_DB_NAME}" ]
        interval: 5s
        timeout: 5s
        retries: 5

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set environment variables and run unit tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          LOGGER_ROOT_NAME: ${{ secrets.LOGGER_ROOT_NAME }}

        run: python manage.py test

  build-and-push:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t mhasan09/mock_server_lite:latest .

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push mhasan09/mock_server_lite:latest


